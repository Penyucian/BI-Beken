{"version":3,"sources":["component/home/index.jsx","component/utils/modalDate.jsx","component/utils/navbar.jsx","component/utils/dateTime.jsx","asset/tools/api.jsx","component/dashboard/keuangan/pendapatan.jsx","component/dashboard/keuangan/pendapatanPerCaraBayar.jsx","component/dashboard/keuangan/pendapatanPerJenis.jsx","component/dashboard/keuangan/pendapatanPerUnit.jsx","component/dashboard/keuangan/trendPendapatan.jsx","component/dashboard/keuangan/index.jsx","component/dashboard/pelayanan/sepuluhBesarPenyakitRJ.jsx","component/dashboard/pelayanan/sepuluhBesarPenyakitRI.jsx","component/dashboard/pelayanan/trendKunjungan.jsx","component/dashboard/pelayanan/kunjunganRJ.jsx","component/dashboard/pelayanan/kunjunganRI.jsx","component/dashboard/pelayanan/kunjunganCaraBayar.jsx","component/dashboard/pelayanan/kunjungan.jsx","component/dashboard/pelayanan/tempatTidur.jsx","component/dashboard/pelayanan/covidstate.jsx","component/dashboard/pelayanan/kunjunganKecamatan.jsx","component/dashboard/pelayanan/kunjunganDanPengunjung.jsx","component/dashboard/pelayanan/index.jsx","component/dashboard/index.jsx","component/login/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","className","activeClassName","to","ModalDate","props","show","Navbar","useState","today","Date","current","getDay","getDate","getMonth","getFullYear","dateTime","setDateTime","useEffect","id","setInterval","clearInterval","DateTime","dateLast","onClick","API","axios","create","baseURL","headers","Pendapatan","setPendapatan","PendatanAvg","setPendatanAvg","dataInterval","a","get","then","res","data","totalavg","total","PendapatanCaraBayar","width","height","gradient","CaraBayar","setCaraBayar","setPendatapan","result","resultName","map","x","name","resultPendapatan","pendapatan","labels","datasets","fill","cubicInterpolationMode","backgroundColor","context","chart","ctx","chartArea","chartWidth","right","left","chartHeight","bottom","top","createLinearGradient","addColorStop","getGradient","options","indexAxis","plugins","legend","display","fontColor","title","color","text","responsive","maintainAspectRatio","animation","duration","scales","ticks","font","size","gridLines","y","PendapatanPerJenis","Jenis","setJenis","resultJenis","jenis","PendapatanPerUnit","klinik","setKlinik","TrendPendapatan","pendapatanBulan","setPendapatanBulan","months","resultbulan","obj","bulan","resultTotal","catch","error","console","log","label","borderColor","Keuangan","SepuluhBesarPenyakitRJ","sepuluhBesarPenyakitRJ","setsepuluhBesarPenyakitRJ","sepuluhBesarPenyakitRJTotal","setsepuluhBesarPenyakitRJTotal","resulticd","icd_code","jml","SepuluhBesarPenyakitRI","sepuluhBesarPenyakitRI","setsepuluhBesarPenyakitRI","sepuluhBesarPenyakitRITotal","setsepuluhBesarPenyakitRITotal","TrendKunjungan","kunjunganRJ","setKunjuganRJ","kunjunganRI","setKunjuganRI","kunjunganbulan","setKunjuganbulan","dataRJ","dataRI","resultTotalRJ","resultTotalRI","KunjunganRJ","setkunjunganRJ","kunjunganRJTotal","setskunjunganRJTotal","resultLabel","KunjunganRI","setkunjunganRI","kunjunganRITotal","setskunjunganRITotal","KunjunganCaraBayar","kunjunganCaraBayar","setkunjunganCaraBayar","kunjunganCaraBayarTotal","setkunjunganCaraBayarTotal","Kunjungan","kunjungan","setkunjungan","kunjunganAvg","setkunjunganAvg","dataAvg","kunjunganAVG","TempatTidur","TempatTidurNonCovid","setTempatTidurNonCovid","TempatTidurCovid","setTempatTidurCovid","semuaBedTersedia","CovidState","covidState","setCovidState","KunjunganKecamatan","kunjunganKecamatan","setkunjunganKecamatan","kunjunganKecamatanTotal","setkunjunganKecamatanTotal","KunjunganDanPengunjung","stacked","Pelayanan","Dashboard","useFormInput","initialValue","value","setValue","onChange","e","target","Login","username","password","setError","loading","required","placeholder","type","autoComplete","post","response","localStorage","setItem","JSON","stringify","history","push","message","err","disabled","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d94dda4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"h-screen flex flex-col items-center justify-center text-white\">\r\n            <h1 className=\"text-3xl font-bold\">Welcome Home</h1> <br />\r\n            <div className=\"flex flex-row\">\r\n                <Link className=\"bg-gray-100 px-3 py-2 text-gray-900 rounded mr-2\" activeClassName=\"active\" to=\"/auth\">auth</Link>\r\n                <Link className=\"bg-gray-100 px-3 py-2 text-gray-900 rounded\" activeClassName=\"active\" to=\"/dashboard\">Dashboard</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\n\r\nfunction ModalDate(props) {\r\n    if (!props.show) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n    <>\r\n        <div className=\"h-screen w-screen bg-gray-900 bg-opacity-50 z-50\">\r\n            <div className=\"p-1 bg-white\">\r\n                s\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default ModalDate","import { React, useEffect, useState } from \"react\";\r\nimport { DateTime } from \"./dateTime\";\r\nimport ModalDate from \"./modalDate\";\r\n\r\nfunction Navbar(props) {\r\n\r\n    const [dateFirst, setDateFirst] = useState(null)\r\n    const [dateLast, setDateLast] = useState(DateTime())\r\n \r\n    const handleModalDatePicker = () => {\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <nav className=\"fixed bg-gray-700 top-0 inset-x-0 \">\r\n            <div className=\" px-3 py-2 w-full h-12 flex flex-row justify-between items-center\">\r\n                <div className=\"w-1/3 flex items-center\">\r\n                    <div className=\"text-white text-base font-bold\">SIMRS</div>\r\n                </div>\r\n                <div className=\"w-1/3 flex justify-center items-center\">\r\n                    <div className=\"p-1\">\r\n                        <div className=\"text-white text-2xl font-bold\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-1/3 flex flex-row-reverse items-center\">\r\n                    <div className=\"p-1\">\r\n                        <div className=\"w-8 h-8 bg-blue-500 rounded-full\"></div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n            <div className=\"bg-gray-700 px-3 py-1 w-full h-8 text-white flex flex-row justify-end items-center\">\r\n                <div className=\"mr-2\">{`${dateLast}`}</div>\r\n                <button className=\"bg-gray-600 px-1 flex border border-gray-600 \r\n                                    justify-center text-base material-icons-round \r\n                                    rounded transition-colors \r\n                                    hover:bg-gray-700 focus:border-gray-500 \r\n                                    hover:text-gray-300 hover:shadow\"\r\n                        id=\"filterDate\"\r\n                        onClick={handleModalDatePicker}>\r\n                        search\r\n                </button>\r\n            </div>\r\n        </nav> \r\n    </>)\r\n}\r\n\r\nexport default Navbar","import { useEffect, useState } from \"react\";\r\n\r\nexport const DateTime = () => {\r\n    const days = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', \"Jum'at\", 'Sabtu']\r\n    const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', \"Juni\", 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']\r\n    const today = new Date();\r\n    const current = `${days[today.getDay()]}, ${today.getDate()} ${months[today.getMonth()]} ${today.getFullYear()}`\r\n\r\n    const [dateTime, setDateTime] = useState(current)\r\n\r\n    useEffect(() => {\r\n        const id = setInterval(() => setDateTime(current),1000)\r\n        return () => {\r\n            clearInterval(id)\r\n        }\r\n    })\r\n\r\n    return dateTime\r\n}","import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n    //baseURL: 'http://149.28.157.18/api/',\r\n    baseURL: 'http://localhost:2000/api/',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'authorization': 'Prime eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VyX3VuYW1lIjoiYmlzbWlsbGFoIiwidXNlcl9uYW1lIjoiQWRtIiwiaWF0IjoxNjI3NzY0MDczfQ._3Ts_jvNtgsDBlnOyjMDwKJnapz2KrwK8gPOkKkIq4c'\r\n    }\r\n})\r\n\r\nexport default API","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst Pendapatan = () => {\r\n\r\n    \r\n    const [Pendapatan, setPendapatan] = useState(null);\r\n    const [PendatanAvg, setPendatanAvg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('keuangan/pendapatan')\r\n                .then(res => {\r\n                    const data = res.data\r\n                    setPendatanAvg(data.totalavg)\r\n                    setPendapatan(data.total)\r\n                })              \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n    \r\n    return (\r\n        <div className=\"h-full w-full flex flex-col\">\r\n            <div className=\"h-1/2 w-full p-1\">\r\n                <div className=\"h-full p-1 bg-yellow-500 rounded flex flex-col items-center\">\r\n                    <div className=\"text-sm\">Pendapatan total</div>\r\n                    <div className=\"text-3xl font-bold\">{Pendapatan}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"h-1/2 w-full p-1\">\r\n                <div className=\"h-full p-1 bg-red-700 rounded flex flex-col items-center\">\r\n                    <div className=\"text-sm\">Pendapatan total rata-rata</div>\r\n                    <div className=\"text-3xl font-bold\">{PendatanAvg}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pendapatan\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst PendapatanCaraBayar = () => {\r\n    \r\n    const [CaraBayar, setCaraBayar] = useState(null);\r\n    const [Pendapatan, setPendatapan] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('keuangan/pendapatanCaraBayar')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultName = data.map(x => x.name)\r\n                    const resultPendapatan = data.map(x => x.pendapatan)\r\n                    setCaraBayar(resultName)\r\n                    setPendatapan(resultPendapatan)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: CaraBayar,\r\n        datasets: [\r\n            {\r\n                data: Pendapatan,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Pendapatan Berdasarkan Cara Bayar'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 8,\r\n                    },\r\n                    color: \"white\",\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 6,\r\n                    },\r\n                    color: \"white\",\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default PendapatanCaraBayar","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst PendapatanPerJenis = () => {\r\n\r\n    \r\n    const [Jenis, setJenis] = useState(null);\r\n    const [Pendapatan, setPendapatan] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('keuangan/pendapatanPerJenis')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultJenis = data.map(x => x.jenis)\r\n                    const resultPendapatan = data.map(x => x.pendapatan)\r\n                    setJenis(resultJenis)\r\n                    setPendapatan(resultPendapatan)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: Jenis,\r\n        datasets: [\r\n            {\r\n                data: Pendapatan,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        //indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Pendapatan Berdasarkan Jenis'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default PendapatanPerJenis","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst PendapatanPerUnit = () => {\r\n    \r\n    const [klinik, setKlinik] = useState(null);\r\n    const [Pendapatan, setPendatapan] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('keuangan/pendapatanPerUnit')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultName = data.map(x => x.name)\r\n                    const resultPendapatan = data.map(x => x.pendapatan)\r\n                    setKlinik(resultName)\r\n                    setPendatapan(resultPendapatan)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: klinik,\r\n        datasets: [\r\n            {\r\n                data: Pendapatan,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Pendapatan Berdasarkan Unit'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 8,\r\n                    },\r\n                    color: \"white\",\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 6,\r\n                    },\r\n                    color: \"white\",\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default PendapatanPerUnit","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst TrendPendapatan = () => {\r\n\r\n    const [pendapatan, setPendapatan] = useState(null);\r\n    const [pendapatanBulan, setPendapatanBulan] = useState(null);\r\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('keuangan/trendPendapatan')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultbulan = data.map(obj =>months[obj.bulan - 1])\r\n                    const resultTotal = data.map(obj => obj.total)\r\n                    setPendapatan(resultTotal)\r\n                    setPendapatanBulan(resultbulan)\r\n                })\r\n                .catch(error => {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    const data = {\r\n        labels: pendapatanBulan,\r\n        datasets: [\r\n            {\r\n                label: \"Rawat Jalan\",\r\n                data: pendapatan,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                borderColor: \"#93C5FD\"\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Trend Pendapatan'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                }\r\n            },\r\n        }\r\n    };\r\n    return <Line data={data} options={options} />\r\n}\r\n\r\nexport default TrendPendapatan","import React from \"react\";\r\nimport Pendapatan from \"./pendapatan\";\r\nimport PendapatanCaraBayar from \"./pendapatanPerCaraBayar\";\r\nimport PendapatanPerJenis from \"./pendapatanPerJenis\";\r\nimport PendapatanPerUnit from \"./pendapatanPerUnit\";\r\nimport TrendPendapatan from \"./trendPendapatan\";\r\n\r\nconst Keuangan = () =>{\r\n\r\n    return (\r\n        <div className=\"h-screen w-full pt-20 px-2 pb-2 flex flex-row flex-wrap justify-between\">\r\n            <div className=\"w-2/12 h-full flex flex-col\">\r\n                <div className=\"h-1/3 w-full\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            item 1\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-1/3 w-full\">\r\n                    <Pendapatan />\r\n                </div>\r\n                <div className=\"h-1/3 w-full\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            item 4\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-10/12 h-full flex flex-row\">\r\n                <div className=\"w-1/3 h-full flex flex-col h-full\">\r\n                    <div className=\"w-full h-1/6 flex flex-col\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex items-center justify-center rounded bg-yellow-500 font-bold\">\r\n                                Kondisi Keuangan Belum Mencapai Target\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-full h-5/6 flex flex-col\">\r\n                        <div className=\"w-full h-1/2\">\r\n                            <div className=\"w-full h-full p-1\">\r\n                                <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                    <TrendPendapatan />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-full h-1/2\">\r\n                            <div className=\"w-full h-full p-1\">\r\n                                <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                    item 7\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-1/3 flex flex-col h-full\">\r\n                    <div className=\"h-2/3\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                <PendapatanPerUnit />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"h-1/3\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                <PendapatanCaraBayar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-1/3 flex flex-col h-full\">\r\n                    <div className=\"h-1/3\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                item 10\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"h-1/3\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                item 11\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"h-1/3\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                <PendapatanPerJenis />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Keuangan","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst SepuluhBesarPenyakitRJ = () => {\r\n\r\n    \r\n    const [sepuluhBesarPenyakitRJ, setsepuluhBesarPenyakitRJ] = useState(null);\r\n    const [sepuluhBesarPenyakitRJTotal, setsepuluhBesarPenyakitRJTotal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/sepuluhBesarRajal')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resulticd = data.map(x => x.icd_code)\r\n                    const resultTotal = data.map(x => x.jml)\r\n                    setsepuluhBesarPenyakitRJ(resulticd)\r\n                    setsepuluhBesarPenyakitRJTotal(resultTotal)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: sepuluhBesarPenyakitRJ,\r\n        datasets: [\r\n            {\r\n                data: sepuluhBesarPenyakitRJTotal,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        //indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: '10 Besar Penyakit RJ'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default SepuluhBesarPenyakitRJ","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst SepuluhBesarPenyakitRI = () => {\r\n\r\n    \r\n    const [sepuluhBesarPenyakitRI, setsepuluhBesarPenyakitRI] = useState(null);\r\n    const [sepuluhBesarPenyakitRITotal, setsepuluhBesarPenyakitRITotal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/sepuluhBesarRanap')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resulticd = data.map(x => x.icd_code)\r\n                    const resultTotal = data.map(x => x.jml)\r\n                    setsepuluhBesarPenyakitRI(resulticd)\r\n                    setsepuluhBesarPenyakitRITotal(resultTotal)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: sepuluhBesarPenyakitRI,\r\n        datasets: [\r\n            {\r\n                data: sepuluhBesarPenyakitRITotal,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        //indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: '10 Besar Penyakit RI'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default SepuluhBesarPenyakitRI","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst TrendKunjungan = () => {\r\n\r\n    const [kunjunganRJ, setKunjuganRJ] = useState(null);\r\n    const [kunjunganRI, setKunjuganRI] = useState(null);\r\n    const [kunjunganbulan, setKunjuganbulan] = useState(null);\r\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/trendMasukRumahSakit')\r\n                .then(res => {\r\n                    const dataRJ = res.data.kunjunganRJ\r\n                    const dataRI = res.data.kunjunganRI\r\n                    const resultbulan = dataRJ.map(obj =>months[obj.bulan - 1])\r\n                    const resultTotalRJ = dataRJ.map(obj => obj.jml)\r\n                    const resultTotalRI = dataRI.map(obj => obj.jml)\r\n                    setKunjuganRJ(resultTotalRJ)\r\n                    setKunjuganRI(resultTotalRI)\r\n                    setKunjuganbulan(resultbulan)\r\n                })\r\n                .catch(error => {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    const data = {\r\n        labels: kunjunganbulan,\r\n        datasets: [\r\n            {\r\n                label: \"Rawat Jalan\",\r\n                data: kunjunganRJ,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                borderColor: \"#93C5FD\"\r\n            },\r\n            {\r\n                label: \"Rawat Inap\",\r\n                data: kunjunganRI,\r\n                fill: false,\r\n                borderColor: \"#3B82F6\"\r\n            }\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Trend Kunjungan'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: \"white\"\r\n                }\r\n            },\r\n        }\r\n    };\r\n    return <Line data={data} options={options} />\r\n}\r\n\r\nexport default TrendKunjungan","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst KunjunganRJ = () => {\r\n\r\n    \r\n    const [kunjunganRJ, setkunjunganRJ] = useState(null);\r\n    const [kunjunganRJTotal, setskunjunganRJTotal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/kunjunganRJ')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultLabel = data.map(x => x.label)\r\n                    const resultTotal = data.map(x => x.jml)\r\n                    setkunjunganRJ(resultLabel)\r\n                    setskunjunganRJTotal(resultTotal)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: kunjunganRJ,\r\n        datasets: [\r\n            {\r\n                data: kunjunganRJTotal,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Kunjungan Rawat Jalan'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 4,\r\n                    },\r\n                    color: \"white\",\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 4,\r\n                    },\r\n                    color: \"white\",\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default KunjunganRJ","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst KunjunganRI = () => {\r\n\r\n    \r\n    const [kunjunganRI, setkunjunganRI] = useState(null);\r\n    const [kunjunganRITotal, setskunjunganRITotal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/kunjunganRI')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultLabel = data.map(x => x.label)\r\n                    const resultTotal = data.map(x => x.jml)\r\n                    setkunjunganRI(resultLabel)\r\n                    setskunjunganRITotal(resultTotal)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: kunjunganRI,\r\n        datasets: [\r\n            {\r\n                data: kunjunganRITotal,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Kunjungan Rawat Inap'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 4,\r\n                    },\r\n                    color: \"white\",\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 4,\r\n                    },\r\n                    color: \"white\",\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default KunjunganRI","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst KunjunganCaraBayar = () => {\r\n\r\n    \r\n    const [kunjunganCaraBayar, setkunjunganCaraBayar] = useState(null);\r\n    const [kunjunganCaraBayarTotal, setkunjunganCaraBayarTotal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/kunjunganCaraBayar')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultLabel = data.map(x => x.label)\r\n                    const resultTotal = data.map(x => x.total)\r\n                    setkunjunganCaraBayar(resultLabel)\r\n                    setkunjunganCaraBayarTotal(resultTotal)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: kunjunganCaraBayar,\r\n        datasets: [\r\n            {\r\n                data: kunjunganCaraBayarTotal,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Kunjungan Cara Bayar'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 8,\r\n                    },\r\n                    color: \"white\",\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 8,\r\n                    },\r\n                    color: \"white\",\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default KunjunganCaraBayar","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst Kunjungan = () => {\r\n\r\n    \r\n    const [kunjungan, setkunjungan] = useState(null);\r\n    const [kunjunganAvg, setkunjunganAvg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/kunjungan')\r\n                .then(res => {\r\n                    const data = res.data.kunjungan\r\n                    const dataAvg = res.data.kunjunganAVG\r\n                    setkunjungan(data)\r\n                    setkunjunganAvg(dataAvg)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n    \r\n    return (\r\n        <div className=\"h-full w-full flex flex-col justify-center\">\r\n            <div className=\"text-center font-bold text-white mb-1\">Kunjungan</div>\r\n            <div className=\"flex flex-row\">\r\n                <div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\r\n                    {kunjungan}\r\n                    <div className=\"text-xs font-bold\"> total</div>\r\n                </div>\r\n                <div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\r\n                    {kunjunganAvg}\r\n                    <div className=\"text-xs font-bold\"> rata-rata</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Kunjungan","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst TempatTidur = () => {\r\n\r\n    \r\n    const [TempatTidurNonCovid, setTempatTidurNonCovid] = useState(null);\r\n    const [TempatTidurCovid, setTempatTidurCovid] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/ketersediaanBedNonCovid')\r\n                .then(res => {\r\n                    const data = res.data.semuaBedTersedia\r\n                    setTempatTidurNonCovid(data)\r\n                })\r\n            await API.get('pelayanan/ketersediaanBedCovid')\r\n                .then(res => {\r\n                    const data = res.data.semuaBedTersedia\r\n                    setTempatTidurCovid(data)\r\n                })                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n    \r\n    return (\r\n        <div className=\"h-full w-full flex flex-row mt-1\">\r\n            <div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\r\n                {TempatTidurNonCovid}\r\n                <div className=\"text-xs font-bold\">umum</div>\r\n            </div><div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\r\n                {TempatTidurCovid}\r\n                <div className=\"text-xs font-bold\">covid</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempatTidur\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst CovidState = () => {\r\n\r\n    \r\n    const [covidState, setCovidState] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/stateCovid')\r\n                .then(res => {\r\n                    const data = res.data.data\r\n                    setCovidState(data)\r\n                })            \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n    \r\n    return (\r\n        <div className=\"h-full w-full flex flex-col mt-1\">\r\n            <div className=\"text-center text-xs text-white\">Infectious Disease</div>\r\n            <div className=\"text-center font-bold text-sm text-white\">Covid-19</div>\r\n            <div className=\"text-center font-bold text-3xl text-white\">{covidState} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CovidState\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst KunjunganKecamatan = () => {\r\n\r\n    \r\n    const [kunjunganKecamatan, setkunjunganKecamatan] = useState(null);\r\n    const [kunjunganKecamatanTotal, setkunjunganKecamatanTotal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/kunjunganKecamatan')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resultLabel = data.map(x => x.label)\r\n                    const resultTotal = data.map(x => x.jml)\r\n                    setkunjunganKecamatan(resultLabel)\r\n                    setkunjunganKecamatanTotal(resultTotal)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#F59E0B\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: kunjunganKecamatan,\r\n        datasets: [\r\n            {\r\n                data: kunjunganKecamatanTotal,\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Kunjungan Berdasarkan Kecamatan'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 8,\r\n                    },\r\n                    color: \"white\",\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    font: {\r\n                        size: 8,\r\n                    },\r\n                    color: \"white\",\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default KunjunganKecamatan","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport API from \"../../../asset/tools/api\";\r\n\r\nconst KunjunganDanPengunjung = () => {\r\n\r\n   /*\r\n    const [sepuluhBesarPenyakitRI, setsepuluhBesarPenyakitRI] = useState(null);\r\n    const [sepuluhBesarPenyakitRITotal, setsepuluhBesarPenyakitRITotal] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dataInterval = setInterval( async () => {\r\n            await API.get('pelayanan/kunjunganDanPengunjung')\r\n                .then(res => {\r\n                    const data = res.data.result\r\n                    const resulticd = data.map(x => x.icd_code)\r\n                    const resultTotal = data.map(x => x.jml)\r\n                    setsepuluhBesarPenyakitRI(resulticd)\r\n                    setsepuluhBesarPenyakitRITotal(resultTotal)\r\n                })\r\n                \r\n        }, 15000);\r\n        return () => clearInterval(dataInterval)\r\n    })*/\r\n\r\n    let width, height, gradient;\r\n    function getGradient(ctx, chartArea) {\r\n        const chartWidth = chartArea.right - chartArea.left;\r\n        const chartHeight = chartArea.bottom - chartArea.top;\r\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n            // Create the gradient because this is either the first render\r\n            // or the size of the chart has changed\r\n            width = chartWidth;\r\n            height = chartHeight;\r\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n            gradient.addColorStop(0, \"#eaeaea\");\r\n            gradient.addColorStop(1, \"#FCD34D\");\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    const data = {\r\n        labels: [1,3,5],\r\n        datasets: [\r\n            {\r\n                data: [1,3,5],\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },{\r\n                data: [55,4,6],\r\n                fill: true,\r\n                cubicInterpolationMode: 'monotone',\r\n                backgroundColor: function(context) {\r\n                    const chart = context.chart;\r\n                    const {ctx, chartArea} = chart;\r\n            \r\n                    if (!chartArea) {\r\n                      // This case happens on initial chart load\r\n                        return null;\r\n                    }\r\n                    return getGradient(ctx, chartArea);\r\n                },\r\n            },\r\n        ]\r\n    };\r\n    \r\n    const options= {\r\n        //indexAxis: 'y',\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                fontColor: \"white\"\r\n            },\r\n            title: {\r\n              display: true,\r\n              color: \"white\",\r\n              text: 'Kunjungan dan Pengunjung'\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n            duration: 0\r\n        },\r\n        scales: {\r\n            x: {\r\n                stacked: true,\r\n                ticks: {\r\n                    color: \"white\"\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"white\"\r\n                },\r\n            },\r\n            y: {\r\n                stacked: true,\r\n                ticks: {\r\n                    color: \"white\"\r\n                }\r\n            },\r\n        }\r\n    };\r\n    \r\n    return <Bar data={data} options={options} />\r\n}\r\n\r\nexport default KunjunganDanPengunjung","import React from \"react\";\r\nimport SepuluhBesarPenyakitRJ from \"./sepuluhBesarPenyakitRJ\";\r\nimport SepuluhBesarPenyakitRI from \"./sepuluhBesarPenyakitRI\";\r\nimport TrendKunjungan from \"./trendKunjungan\";\r\nimport KunjunganRJ from \"./kunjunganRJ\";\r\nimport KunjunganRI from \"./kunjunganRI\";\r\nimport KunjunganCaraBayar from \"./kunjunganCaraBayar\";\r\nimport Kunjungan from \"./kunjungan\";\r\nimport TempatTidur from \"./tempatTidur\";\r\nimport CovidState from \"./covidstate\";\r\nimport KunjunganKecamatan from \"./kunjunganKecamatan\";\r\nimport KunjunganDanPengunjung from \"./kunjunganDanPengunjung\";\r\n\r\n\r\nconst Pelayanan = () =>{\r\n\r\n    return (\r\n        <section className=\"h-screen w-full pt-20 px-2 pb-2 flex flex-row flex-wrap justify-between\">\r\n            <div className=\"w-1/4 h-full\">\r\n                <div className=\"h-1/3 w-full flex flex-wrap\">\r\n                    <div className=\"w-1/2 h-1/2 p-1\">\r\n                        <div className=\"w-full h-full p-1 bg-yellow-500 flex flex-col items-center rounded\">\r\n                            <Kunjungan />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-1/2 h-1/2 p-1\">\r\n                        <div className=\"w-full h-full p-1 bg-red-700 flex flex-col items-center rounded\">\r\n                            <div className=\"text-center font-bold text-white\">TT Tersedia</div>\r\n                            <TempatTidur />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-1/2 h-1/2 p-1\">\r\n                        <div className=\"w-full h-full p-1 bg-blue-500 flex flex-row rounded\">\r\n                            <div className=\"w-1/3 h-full\">BOR</div>\r\n                            <div className=\"w-1/3 h-full\">NDR</div>\r\n                            <div className=\"w-1/3 h-full\">GDR</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-1/2 h-1/2 p-1\">\r\n                        <div className=\"w-full h-full p-1 bg-red-500 flex flex-col items-center rounded\">\r\n                            <CovidState />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-1/3 w-full\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            <KunjunganDanPengunjung />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-1/3 w-full\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            <div className=\"text-white text-center font-bold\">Kunjungan Rawat Jalan</div>\r\n                            <div className=\"w-full h-full\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-1/4 h-full\">\r\n                <div className=\"h-1/3 w-full flex flex-wrap\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            <KunjunganRJ />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-1/3 w-full\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            <KunjunganRI />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-1/3 w-full\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            <KunjunganCaraBayar />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-1/4 h-full\">\r\n                <div className=\"h-1/2 w-full flex flex-wrap\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            <TrendKunjungan />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-1/2 w-full flex flex-wrap\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                            <KunjunganKecamatan />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-1/4 h-full\">\r\n                <div className=\"h-1/6 w-full\">\r\n                    <div className=\"w-full h-full p-1\">\r\n                        <div className=\"w-full h-full p-1 flex flex-row rounded bg-green-500 flex text-white text-center text-2xl font-bold items-center justify-center\">\r\n                            Kondisi Pelayanan Aman\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-5/6 w-full\">\r\n                    <div className=\"h-1/2 w-full\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                <SepuluhBesarPenyakitRJ />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"h-1/2 w-full\">\r\n                        <div className=\"w-full h-full p-1\">\r\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\r\n                                <SepuluhBesarPenyakitRI />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Pelayanan","import React, { useState } from \"react\";\r\nimport ModalDate from \"../utils/modalDate\";\r\nimport Navbar from \"../utils/navbar\";\r\nimport Keuangan from \"./keuangan\";\r\nimport Pelayanan from \"./pelayanan\";\r\n\r\nconst Dashboard = (props) =>{\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Pelayanan />\r\n            <Keuangan />\r\n            <ModalDate />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import axios from \"axios\";\r\nimport React, {useState} from \"react\";\r\n\r\nfunction Login(props) {\r\n    \r\n    const username = useFormInput('');\r\n    const password = useFormInput('');\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    \r\n  // handle button click of login form\r\n    const handleLogin = () => {\r\n      if ((username.value && password.value) !== \"\") {\r\n          \r\n          axios.post(\"http://localhost:2000/api/user/login\",\r\n          {\r\n          username: username.value,\r\n          password: password.value\r\n        },{\r\n            headers:{\r\n                \"Content-Type\":\"application/json\" \r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.data.data) {\r\n                if (response.data.data) {\r\n                    localStorage.setItem(\"authorization\", JSON.stringify(response.data));\r\n                    setError(null)\r\n                    props.history.push('/dashboard');\r\n                }\r\n                return response.data;    \r\n            } else {\r\n                setError(response.data.message)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n      } else{\r\n        setError(\"Masukkan username dan password\")\r\n      }\r\n\r\n        //SignIn(username.value, username.value)\r\n        //    .then(response => {\r\n        //       console.log(response)\r\n        //    });\r\n      \r\n      //SignIn.post(\"user/login\", {username: username.value, password: password.value})\r\n      //  .then(response => {\r\n      //    console.log(response)\r\n      //  });\r\n    }\r\n\r\n    return(\r\n        <div className=\"h-screen bg-gray-900 flex items-center justify-center text-white\">\r\n            <div className=\"flex flex-col\">\r\n                <div className=\"font-bold\">Selamat Datang</div>\r\n                <h1 className=\"text-3xl font-bold\">Real-Time Business Intelligence <br /> Rumah Sakit</h1>\r\n                <br />\r\n                {error && <>\r\n                        <div className=\"px-3 py-2 w-full h-auto bg-red-500 rounded\">\r\n                            {error}\r\n                        </div>\r\n                        <br />\r\n                    </>\r\n                }\r\n                <div className=\"\">\r\n                    Username <br />\r\n                    <input required className=\"\r\n                        w-full px-3 py-2 bg-gray-900 border border-gray-500 rounded outline-none\r\n                        hover:border-gray-100\r\n                        focus:border-4 focus:border-blue-500\"\r\n                            placeholder=\"username\" \r\n                            type=\"text\" \r\n                            {...username} \r\n                            autoComplete=\"new-password\"\r\n                    />\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    Password <br />\r\n                    <input className=\"\r\n                        w-full px-3 py-2 mb-2 bg-gray-900 border border-gray-500 rounded outline-none\r\n                        hover:border-gray-100\r\n                        focus:border-4 focus:border-blue-500\"\r\n                            placeholder=\"password\"\r\n                            type=\"password\"\r\n                            {...password}\r\n                            autoComplete=\"new-password\"\r\n                            required \r\n                    />\r\n                </div>\r\n                <input className=\"w-full bg-gray-900 text-right outline-none cursor-pointer\" type=\"button\" value=\"Lupa Password\" /><br />\r\n                <input className=\"w-full px-3 py-2 bg-blue-500 border border-blue-500 rounded font-bold outline-none\r\n                    hover:bg-blue-600 cursor-pointer\r\n                    focus:border-4 focus:border-blue-500 focus:bg-blue-700\"\r\n                        value=\"Sign in\"\r\n                        type=\"button\"\r\n                        onClick={handleLogin}\r\n                        disabled={loading}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst useFormInput = initialValue => {\r\n    const [value, setValue] = useState(initialValue);\r\n   \r\n    const handleChange = e => {\r\n      setValue(e.target.value);\r\n    }\r\n    return {\r\n      value,\r\n      onChange: handleChange\r\n    }\r\n  }\r\n\r\nexport default Login","import Home from \"./component/home/\";\nimport { BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport './App.css';\nimport Dashboard from \"./component/dashboard\";\nimport Login from \"./component/login\";\n\nfunction App() {\n    return (\n        <div className=\" bg-gray-700\">\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/dashboard\" component={Dashboard} />\n                    <Route exact path=\"/auth\" component={Login} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}