{"version":3,"sources":["common/component/login/index.jsx","common/utils/loading.jsx","common/utils/date.jsx","common/utils/api.js","common/component/dashboard/private/name.jsx","common/component/additional/dateTime.jsx","common/component/additional/modal.jsx","common/component/additional/navbar.jsx","common/component/dashboard/keuangan/kondisiKeuangan.jsx","common/component/dashboard/keuangan/pendapatan.jsx","common/component/dashboard/keuangan/pendapatanCaraBayar.jsx","common/component/dashboard/keuangan/pendapatanPerCaraBayar.jsx","common/component/dashboard/keuangan/pendapatanPerJenis.jsx","common/component/dashboard/keuangan/pendapatanPerPenunjang.jsx","common/component/dashboard/keuangan/pendapatanPerRanap.jsx","common/component/dashboard/keuangan/pendapatanPerUnit.jsx","common/component/dashboard/keuangan/statusKlaim.jsx","common/component/dashboard/keuangan/trendPendapatan.jsx","common/component/dashboard/keuangan/index.jsx","common/component/dashboard/pelayanan/sepuluhBesarPenyakitRJ.jsx","common/component/dashboard/pelayanan/sepuluhBesarPenyakitRI.jsx","common/component/dashboard/pelayanan/trendKunjungan.jsx","common/component/dashboard/pelayanan/kunjunganRJ.jsx","common/component/dashboard/pelayanan/kunjunganRI.jsx","common/component/dashboard/pelayanan/kunjunganCaraBayar.jsx","common/component/dashboard/pelayanan/kunjungan.jsx","common/component/dashboard/pelayanan/tempatTidur.jsx","common/component/dashboard/pelayanan/covidstate.jsx","common/component/dashboard/pelayanan/kunjunganKecamatan.jsx","common/component/dashboard/pelayanan/kondisi.jsx","common/component/dashboard/pelayanan/kunjunganDanPengunjung.jsx","common/component/dashboard/pelayanan/barberJohnson.jsx","common/component/dashboard/pelayanan/stockObat.jsx","common/component/dashboard/pelayanan/penggunaanObat.jsx","common/component/dashboard/pelayanan/index.jsx","common/component/dashboard/index.jsx","App.js","reportWebVitals.js","common/utils/theme.js","index.js"],"names":["useFormInput","initialValue","useState","value","setValue","onChange","e","target","Login","props","username","password","error","setError","loading","setLoading","className","required","placeholder","type","autoComplete","onClick","axios","post","headers","then","response","data","localStorage","setItem","group","window","location","reload","message","catch","err","console","log","disabled","Loading","lastDate","sessionStorage","getItem","firstDate","limit","filterDates","dateFirst","dateLast","token","API","create","baseURL","Name","name","setName","on1","setOn1","useEffect","a","get","res","fetchData","removeItem","DateTime","today","Date","current","getDay","getDate","getMonth","getFullYear","dateTime","setDateTime","id","setInterval","clearInterval","DateFilter","moment","format","Modal","show","onClose","stopPropagation","title","children","Navbar","between","showModal","setShowModal","first","last","filterShow","defaultValue","document","getElementById","Storage","alert","setDate","KondisiKeuangan","kondisi","setKondisi","bg","setBG","FilterDates","dataKondisi","dataInterval","Pendapatan","setPendapatan","PendatanAvg","setPendatanAvg","percent","setPercent","targetTahun","pop","totalavg","total","math","colors","arcWidth","nrOfLevels","hideText","arcPadding","cornerRadius","needleColor","needleBaseColor","PendapatanCaraBayar","CaraBayar","setCaraBayar","result","resultName","map","x","resultPendapatan","final","labels","datasets","fill","backgroundColor","options","plugins","legend","display","fontColor","font","size","color","text","segmentShowStroke","responsive","maintainAspectRatio","animation","duration","PendapatanPerCaraBayar","width","height","gradient","pendapatan","cubicInterpolationMode","context","chart","ctx","chartArea","chartWidth","right","left","chartHeight","bottom","top","createLinearGradient","addColorStop","getGradient","indexAxis","scales","ticks","gridLines","y","PendapatanPerJenis","Jenis","setJenis","resultJenis","jenis","PendapatanPerPenunjang","klinik","setKlinik","PendapatanPerRanap","PendapatanPerUnit","StatusKlaim","accept","setAccept","pending","setPending","decline","setDecline","bulan","setBulan","months","resultbulan","obj","resultAcc","resultPen","resultDec","refuse","label","borderColor","offset","TrendPendapatan","pendapatanBulan","setPendapatanBulan","resultTotal","Keuangan","SepuluhBesarPenyakitRJ","sepuluhBesarPenyakitRJ","setsepuluhBesarPenyakitRJ","sepuluhBesarPenyakitRJTotal","setsepuluhBesarPenyakitRJTotal","resulticd","icd_code","jml","SepuluhBesarPenyakitRI","sepuluhBesarPenyakitRI","setsepuluhBesarPenyakitRI","sepuluhBesarPenyakitRITotal","setsepuluhBesarPenyakitRITotal","TrendKunjungan","kunjunganRJ","setKunjuganRJ","kunjunganRI","setKunjuganRI","kunjunganbulan","setKunjuganbulan","dataRJ","dataRI","resultTotalRJ","resultTotalRI","KunjunganRJ","setkunjunganRJ","kunjunganRJTotal","setskunjunganRJTotal","resultLabel","KunjunganRI","setkunjunganRI","kunjunganRITotal","setskunjunganRITotal","KunjunganCaraBayar","kunjunganCaraBayar","setkunjunganCaraBayar","kunjunganCaraBayarTotal","setkunjunganCaraBayarTotal","Kunjungan","kunjungan","setkunjungan","kunjunganAvg","setkunjunganAvg","dataAvg","kunjunganAVG","TempatTidur","TempatTidurNonCovid","setTempatTidurNonCovid","TempatTidurCovid","setTempatTidurCovid","semuaBedTersedia","CovidState","covidState","setCovidState","KunjunganKecamatan","kunjunganKecamatan","setkunjunganKecamatan","kunjunganKecamatanTotal","setkunjunganKecamatanTotal","KondisiPelayanan","indikator","KunjunganDanPengunjung","dKBL1Data","setdKBL1Data","dKBL2Data","setdKBL2Data","dKJK1Data","setdKJK1Data","dKJK2Data","setdKJK2Data","dPBL1Data","setdPBL1Data","dPBL2Data","setdPBL2Data","kunjunganBL","jumlah","kunjunganLP","pengunjungBL","data2","data3","stacked","BarberJohnson","gdr","setGDR","ndr","setNDR","bor","setBOR","dataGDR","dataNDR","dataBOR","StockObat","stockObat","setStockObat","namaObat","setNamaObat","hasilNamaObat","hasilStockObat","PenggunaanObatTertinggi","obatLabel","setObatLabel","obatTotal","setObatTotal","drug_name","Pelayanan","Dashboard","groupAccess","parseInt","App","isAuth","setIsAuth","setBetween","date","auth","middleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","useSystemColorMode","ReactDOM","render","StrictMode","initialColorMode"],"mappings":"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","file":"static/js/main.b16e7b9a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\n\nfunction Login(props) {\n\n    const username = useFormInput('');\n    const password = useFormInput('');\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n\n    // handle button click of login form\n    const handleLogin = () => {\n        setLoading(true)\n        if ((username.value && password.value) !== \"\") {\n            axios.post(\"http://149.28.157.18:2000/api/user/login\",\n                {\n                    username: username.value,\n                    password: password.value\n                }, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n                .then((response) => {\n                    if (response.data.data) {\n                        if (response.data.data) {\n                            localStorage.setItem(\"authorization\", response.data.data);\n                            localStorage.setItem(\"group\", response.data.group)\n                            setError(null)\n                            window.location.reload();\n                        }\n                        return response.data;\n                    } else {\n                        setLoading(false)\n                        setError(response.data.message)\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        } else {\n            setLoading(false)\n            setError(\"Masukkan username dan password\")\n        }\n    }\n\n    return (\n\n        <div className=\"h-screen bg-gray-900 flex items-center justify-center text-white\">\n            {loading ? <div className=\"text-white p-1 bg-blue-700 rounded-lg\">Loading...</div> :\n                <div className=\"flex flex-col\">\n                    <div className=\"font-bold\">Selamat Datang</div>\n                    <h1 className=\"text-3xl font-bold\">Real-Time Business Intelligence <br /> Rumah Sakit</h1>\n                    <br />\n                    {error && <>\n                        <div className=\"px-3 py-2 w-full h-auto bg-red-500 rounded\">\n                            {error}\n                        </div>\n                        <br />\n                    </>\n                    }\n                    <div className=\"\">\n                        Username <br />\n                        <input required className=\"\n                        w-full px-3 py-2 bg-gray-900 border border-gray-500 rounded outline-none\n                        hover:border-gray-100\n                        focus:border-4 focus:border-blue-500\"\n                            placeholder=\"username\"\n                            type=\"text\"\n                            {...username}\n                            autoComplete=\"new-password\"\n                        />\n                    </div>\n                    <div className=\"mt-2\">\n                        Password <br />\n                        <input className=\"\n                        w-full px-3 py-2 mb-2 bg-gray-900 border border-gray-500 rounded outline-none\n                        hover:border-gray-100\n                        focus:border-4 focus:border-blue-500\"\n                            placeholder=\"password\"\n                            type=\"password\"\n                            {...password}\n                            autoComplete=\"new-password\"\n                            required\n                        />\n                    </div>\n                    <input className=\"w-full bg-gray-900 text-right outline-none cursor-pointer\" type=\"button\" value=\"Lupa Password\" /><br />\n                    <input className=\"w-full px-3 py-2 bg-blue-500 border border-blue-500 rounded font-bold outline-none\n                    hover:bg-blue-600 cursor-pointer\n                    focus:border-4 focus:border-blue-500 focus:bg-blue-700\"\n                        value=\"Sign in\"\n                        type=\"button\"\n                        onClick={handleLogin}\n                        disabled={loading}\n                    />\n                </div>}\n        </div>\n    )\n}\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default Login","function Loading() {\n    return (\n        <div className=\"h-screen bg-gray-900 flex items-center justify-center text-white\">\n            <div className=\"text-white p-1 bg-blue-700 rounded-lg\">Loading...</div>\n        </div>\n    )\n}\n\nexport default Loading","let filterDates\nconst lastDate = window.sessionStorage.getItem(\"lastDate\");\nconst firstDate = window.sessionStorage.getItem(\"firstDate\");\nconst limit = window.sessionStorage.getItem(\"limit\");\n\nif (firstDate) {\n    filterDates = {\n        dateFirst: firstDate,\n        dateLast: lastDate,\n        limit: limit\n    }\n} else {\n    filterDates = {\n        dateLast: lastDate,\n        limit: limit\n    }\n}\n\nexport default filterDates\nexport { lastDate, firstDate }","import axios from \"axios\";\n\nconst token = window.localStorage.getItem(\"authorization\")\n\nconst API = axios.create({\n    baseURL: \"http://149.28.157.18:2000/api/\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"authorization\": token\n    }\n})\n\nexport default API","import React, { useEffect, useState } from \"react\";\nimport API from \"../../../utils/api\";\n\nconst Name = () => {\n\n\n    const [name, setName] = useState(null);\n    const [on1, setOn1] = useState(false);\n\n    useEffect(() => {\n        async function fetchData() {\n            await API.get('user/')\n                .then(res => {\n                    const data = res.data.data\n                    setName(data.name)\n                })\n        }\n        fetchData()\n    })\n\n\n    const logout = () => {\n        localStorage.removeItem(\"authorization\")\n        localStorage.removeItem(\"group\")\n        window.location.reload()\n    }\n\n    return (\n        <>\n            <div className=\"relative\">\n                <button\n                    className=\"px-2 py-1 rounded-lg\n                    hover:bg-gray-700 focus:border-gray-500 \n                    hover:text-gray-300 hover:shadow\"\n                    onClick={() => {\n                        if (on1) {\n                            setOn1(false)\n                        } else {\n                            setOn1(true)\n                        }\n                    }}>\n                    {name}\n                </button>\n                {on1 ?\n                    <button\n                        className=\"right-0 top-8 mt-2 absolute bg-white text-gray-900 \n                        border border-grey-100 px-2 py-1 rounded-lg\n                        hover:bg-gray-700 focus:border-gray-500 \n                        hover:text-gray-300 hover:shadow\"\n                        onClick={logout}>\n                        Logout\n                    </button> : null}\n\n            </div>\n        </>\n    )\n}\n\nexport default Name","import { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nexport const DateTime = () => {\n    const days = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', \"Jum'at\", 'Sabtu']\n    const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', \"Juni\", 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']\n    const today = new Date();\n    const current = `${days[today.getDay()]}, ${today.getDate()} ${months[today.getMonth()]} ${today.getFullYear()}`\n\n    const [dateTime, setDateTime] = useState(current)\n\n    useEffect(() => {\n        const id = setInterval(() => setDateTime(current),1000)\n        return () => {\n            clearInterval(id)\n        }\n    })\n\n    return dateTime\n}\nexport const DateFilter = () => {\n    const today = new Date();\n    const current = moment(today).format('YYYY-MM-DD')\n\n    return current\n}","import React from \"react\";\n\nfunction Modal(props) {\n    return(\n    <>\n        <div className={`fixed top-0 left-0 right-0 bottom-0 h-screen w-screen flex items-center justify-center ${props.show ? \n             'bg-gray-900 px-48 bg-opacity-80 z-50 text-white duration-300 ease-in-out' : 'hidden'}`} \n             onClick={props.onClose}>\n            <div className=\"mt-10 p-3 pb-6 w-full bg-gray-700 rounded shadow-lg\" onClick={e => e.stopPropagation()}>\n                <div className=\"flex flex-row justify-between\">\n                    <div className=\"\">{props.title}</div>\n                    <button className=\"material-icons-round\" onClick={props.onClose}>close</button>\n                </div>\n                <div className=\"divide-y-2 divide-black mt-3\">\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    </>)\n}\n\nexport default Modal","import moment from \"moment\";\nimport { React, useState } from \"react\";\nimport { firstDate, lastDate } from \"../../utils/date\";\nimport Name from \"../dashboard/private/name\";\nimport { DateFilter, DateTime } from \"./dateTime\";\nimport Modal from \"./modal\";\n\nfunction Navbar({ between, title }) {\n\n    const [showModal, setShowModal] = useState(false)\n\n    const filterShow = (firstDate, lastDate) => {\n        if (firstDate) {\n            const first = moment(firstDate).format('DD-MM-YYYY')\n            const last = moment(lastDate).format('DD-MM-YYYY')\n            return (\n                <>\n                    <div className=\"text-white font-bold py-0.5 px-2 bg-blue-700 rounded\">\n                        {first}\n                    </div>\n                    <p className=\"mx-2\">ke</p>\n                    <div className=\"text-white font-bold py-0.5 px-2 bg-blue-700 rounded\">\n                        {last}\n                    </div>\n                    <button className=\"bg-gray-600 mx-2 px-1 flex border border-gray-600 \n                                    justify-center text-xl material-icons-round \n                                    rounded transition-colors \n                                    hover:bg-gray-700 focus:border-gray-500 \n                                    hover:text-gray-300 hover:shadow\" type=\"submit\"\n                        onClick={() => {\n                            window.sessionStorage.removeItem(\"firstDate\")\n                            window.location.reload();\n                        }}>\n                        close\n                    </button>\n                </>\n            )\n        }\n    }\n\n    const setDate = () => {\n        const firstDate = document.getElementById('dateFirst').value\n        const lastDate = document.getElementById('dateLast').value\n\n        if (typeof (Storage) !== \"undefined\") {\n            sessionStorage.setItem(\"firstDate\", firstDate);\n            sessionStorage.setItem(\"lastDate\", lastDate);\n        } else {\n            alert(\"Sorry, your browser does not support Web Storage...\")\n        }\n    }\n\n    return (\n        <>\n            <nav className=\"fixed bg-gray-700 top-0 inset-x-0 \">\n                <div className=\" px-3 py-2 w-full h-12 flex flex-row justify-between items-center\">\n                    <div className=\"w-1/3 flex items-center\">\n                        <div className=\"text-white text-base font-bold\">SIMRS</div>\n                    </div>\n                    <div className=\"w-1/3 flex justify-center items-center\">\n                        <div className=\"p-1\">\n                            <div className=\"text-white text-2xl font-bold\">\n                                {title}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-1/3 flex flex-row-reverse items-center\">\n                        <div className=\"p-1 text-white\">\n                            <Name />\n                        </div>\n                    </div>\n                </div>\n                <div className={`bg-gray-700 px-3 py-1 w-full h-8 text-white flex flex-row items-center ${between}`}>\n                    <div className=\"flex flex-row\">\n                        {filterShow(firstDate, lastDate)}\n                    </div>\n                    <div className=\"flex flex-row\">\n                        <div className=\"mr-2\">{DateTime()}</div>\n                        <button className=\"bg-gray-600 px-1 flex border border-gray-600 \n                                    justify-center text-base material-icons-round \n                                    rounded transition-colors \n                                    hover:bg-gray-700 focus:border-gray-500 \n                                    hover:text-gray-300 hover:shadow\"\n                            id=\"filterDate\"\n                            onClick={() => setShowModal(true)}>\n                            search\n                        </button>\n                    </div>\n                </div>\n            </nav>\n            <Modal onClose={() => { setShowModal(false) }} title=\"Filter Tanggal\" show={showModal}>\n                <div className=\"flex items-center justify-center\">\n                    <input className=\"px-3 py-1 mr-2 rounded outline-none text-gray-500\"\n                        defaultValue={DateFilter()}\n                        type=\"date\" name=\"dateFirst\" id=\"dateFirst\" />\n                    <p>ke</p>\n                    <input className=\"px-3 py-1 mx-2 rounded outline-none text-gray-500\"\n                        defaultValue={DateFilter()}\n                        type=\"date\" name=\"dateLast\" id=\"dateLast\" />\n                    <button className=\"bg-gray-600 px-1 flex border border-gray-600 \n                                    justify-center text-xl material-icons-round \n                                    rounded transition-colors \n                                    hover:bg-gray-700 focus:border-gray-500 \n                                    hover:text-gray-300 hover:shadow\" type=\"submit\"\n                        onClick={() => {\n                            setShowModal(false)\n                            setDate()\n                            window.location.reload()\n                        }}>\n                        search\n                    </button>\n                </div>\n            </Modal>\n        </>)\n}\n\nexport default Navbar","import React, { useEffect, useState } from \"react\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst KondisiKeuangan = () => {\n\n\n    const [kondisi, setKondisi] = useState('indikator');\n    const [bg, setBG] = useState('bg-green-500');\n\n    useEffect(() => {\n        async function fetchData() {\n            await API.post('keuangan/pendapatan', FilterDates)\n                .then(res => {\n                    const dataKondisi = res.data.kondisi\n                    if (dataKondisi === \"Keuangan Rumah Sakit Sedang Kurang Aman\") {\n                        setKondisi(dataKondisi)\n                        setBG('bg-yellow-500')\n                    } else if (dataKondisi === \"Keuangan Rumah Sakit Sedang Tidak Aman\") {\n                        setKondisi(dataKondisi)\n                        setBG('bg-red-500')\n                    } else if (dataKondisi === \"Keuangan Rumah Sakit Aman\") {\n                        setKondisi(dataKondisi)\n                        setBG('bg-green-500')\n                    }\n                })\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        fetchData()\n        return () => clearInterval(dataInterval)\n    })\n\n    return (\n        <div className={`w-full h-full p-1 flex items-center justify-center text-white rounded font-bold ${bg}`}>\n            {kondisi}\n        </div>\n    )\n}\n\nexport default KondisiKeuangan","import React, { useEffect, useState } from \"react\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\nimport Gauge from 'react-gauge-chart'\n\nconst Pendapatan = () => {\n\n\n    const [Pendapatan, setPendapatan] = useState(0);\n    const [PendatanAvg, setPendatanAvg] = useState(0);\n    const [percent, setPercent] = useState(0);\n\n    const fetchData = async () => {\n        await API.post('keuangan/pendapatan', FilterDates)\n            .then(res => {\n                const data = res.data\n                const targetTahun = data.targetTahun.pop()\n                setPendatanAvg(data.totalavg)\n                setPendapatan(data.total)\n                const math = data.total / targetTahun.total\n                if (math > 1) {\n                    setPercent(1)\n                } else {\n                    setPercent(math)\n                }\n            })\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        fetchData()\n        return () => clearInterval(dataInterval)\n    })\n\n    return (\n        <div className=\"h-full w-full flex flex-col\">\n            <div className=\"h-2/4 w-full p-1\">\n                <div className=\"h-full p-1 rounded flex flex-col justify-center items-center\">\n                    <div className=\"text-sm text-center text-white mb-1\">Target Pendapatan</div>\n                    <div >\n                        <Gauge\n                            id=\"gauge-chart1\"\n                            colors={[\"#F87171\", \"#FCD34D\", \"#34D399\"]}\n                            arcWidth={0.4}\n                            nrOfLevels={3}\n                            hideText={false}\n                            arcPadding={0}\n                            cornerRadius={0}\n                            percent={percent}\n                            needleColor=\"#FFFFFF\"\n                            needleBaseColor=\"#FFFFFF\"\n                        /></div>\n                </div>\n            </div>\n            <div className=\"h-1/4 w-full p-1\">\n                <div className=\"h-full p-1 bg-yellow-500 rounded flex flex-col justify-center items-center\">\n                    <div className=\"text-sm text-center text-white \">Pendapatan Total</div>\n                    <div className=\"text-3xl font-bold text-white\">{Pendapatan}</div>\n                </div>\n            </div>\n            <div className=\"h-1/4 w-full p-1\">\n                <div className=\"h-full p-1 bg-red-700 rounded flex flex-col justify-center items-center\">\n                    <div className=\"text-sm text-center text-white \">Pendapatan rata-rata</div>\n                    <div className=\"text-3xl font-bold text-white\">{PendatanAvg}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Pendapatan\n","import React, { useEffect, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst PendapatanCaraBayar = () => {\n\n    const [CaraBayar, setCaraBayar] = useState(0);\n    const [Pendapatan, setPendapatan] = useState(0);\n\n    const fetchData = async () => {\n        await API.post('keuangan/pendapatanCaraBayar', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultName = data.map(x => x.name)\n                const resultPendapatan = data.map(x => x.final)\n                setCaraBayar(resultName)\n                setPendapatan(resultPendapatan)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n\n    const data = {\n        labels: CaraBayar,\n        datasets: [\n            {\n                data: Pendapatan,\n                fill: true,\n                backgroundColor: ['#34D399', '#60A5FA', '#A78BFA', \"#F472B6\", '#B45309', '#1D4ED8']\n            },\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\",\n                font: {\n                    size: 8\n                }\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Distribusi Berdasarkan Cara Bayar'\n            }\n        },\n        segmentShowStroke: false,\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        }\n    };\n\n    return <Doughnut data={data} options={options} />\n}\n\nexport default PendapatanCaraBayar","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst PendapatanPerCaraBayar = () => {\n\n    const [CaraBayar, setCaraBayar] = useState(0);\n    const [Pendapatan, setPendapatan] = useState(0);\n\n    const fetchData = async () => {\n        await API.post('keuangan/pendapatanPerCaraBayar', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultName = data.map(x => x.name)\n                const resultPendapatan = data.map(x => x.pendapatan)\n                setCaraBayar(resultName)\n                setPendapatan(resultPendapatan)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#F59E0B\");\n            gradient.addColorStop(1, \"#FCD34D\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: CaraBayar,\n        datasets: [\n            {\n                data: Pendapatan,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Pendapatan Berdasarkan Cara Bayar'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default PendapatanPerCaraBayar","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst PendapatanPerJenis = () => {\n\n\n    const [Jenis, setJenis] = useState(null);\n    const [Pendapatan, setPendapatan] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('keuangan/pendapatanPerJenis', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultJenis = data.map(x => x.jenis)\n                const resultPendapatan = data.map(x => x.pendapatan)\n                setJenis(resultJenis)\n                setPendapatan(resultPendapatan)\n            })\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#6EE7B7\");\n            gradient.addColorStop(1, \"#047857\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: Jenis,\n        datasets: [\n            {\n                data: Pendapatan,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        //indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Pendapatan Berdasarkan Jenisnya'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default PendapatanPerJenis","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst PendapatanPerPenunjang = () => {\n\n    const [klinik, setKlinik] = useState(null);\n    const [Pendapatan, setPendapatan] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('keuangan/pendapatanPerPenunjang', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultName = data.map(x => x.name)\n                const resultPendapatan = data.map(x => x.pendapatan)\n                setKlinik(resultName)\n                setPendapatan(resultPendapatan)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#F9A8D4\");\n            gradient.addColorStop(1, \"#BE185D\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: klinik,\n        datasets: [\n            {\n                data: Pendapatan,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Pendapatan Berdasarkan Unit pendukung'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    font: {\n                        size: 8,\n                    },\n                    color: \"white\",\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    font: {\n                        size: 6,\n                    },\n                    color: \"white\",\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default PendapatanPerPenunjang","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst PendapatanPerRanap = () => {\n\n    const [klinik, setKlinik] = useState(null);\n    const [Pendapatan, setPendapatan] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('keuangan/pendapatanPerRanap', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultName = data.map(x => x.name)\n                const resultPendapatan = data.map(x => x.pendapatan)\n                setKlinik(resultName)\n                setPendapatan(resultPendapatan)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#FCA5A5\");\n            gradient.addColorStop(1, \"#B91C1C\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: klinik,\n        datasets: [\n            {\n                data: Pendapatan,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Pendapatan Per Ruang Rawat Inap'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    font: {\n                        size: 8,\n                    },\n                    color: \"white\",\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    font: {\n                        size: 6,\n                    },\n                    color: \"white\",\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default PendapatanPerRanap","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst PendapatanPerUnit = () => {\n\n    const [klinik, setKlinik] = useState(null);\n    const [Pendapatan, setPendapatan] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('keuangan/pendapatanPerUnit', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultName = data.map(x => x.name)\n                const resultPendapatan = data.map(x => x.pendapatan)\n                setKlinik(resultName)\n                setPendapatan(resultPendapatan)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#93C5FD\");\n            gradient.addColorStop(1, \"#1D4ED8\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: klinik,\n        datasets: [\n            {\n                data: Pendapatan,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Pendapatan Per Unit Pendukung'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    font: {\n                        size: 8,\n                    },\n                    color: \"white\",\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    font: {\n                        size: 6,\n                    },\n                    color: \"white\",\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default PendapatanPerUnit","import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst StatusKlaim = () => {\n\n    const [accept, setAccept] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [decline, setDecline] = useState(0);\n    const [bulan, setBulan] = useState(null);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\n    const fetchData = async () => {\n        await API.post('keuangan/klaimStatus', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultbulan = data.map(obj => months[obj.bulan - 1])\n                const resultAcc = data.map(obj => obj.accept)\n                const resultPen = data.map(obj => obj.pending)\n                const resultDec = data.map(obj => obj.refuse)\n                setBulan(resultbulan)\n                setAccept(resultAcc)\n                setPending(resultPen)\n                setDecline(resultDec)\n            })\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    const data = {\n        labels: bulan,\n        datasets: [\n            {\n                label: \"Accept\",\n                data: accept,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: \"#10B981\",\n                borderColor: \"#10B981\"\n            },\n            {\n                label: \"Pending\",\n                data: pending,\n                fill: false,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: \"#F59E0B\",\n                borderColor: \"#F59E0B\"\n            },\n            {\n                label: \"Decline\",\n                data: decline,\n                fill: false,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: \"#eaeaea\",\n                borderColor: \"#eaeaea\"\n            }\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Status Klaim BPJS'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n                offset: true\n\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n    return <Line data={data} options={options} />\n}\n\nexport default StatusKlaim","import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst TrendPendapatan = () => {\n\n    const [pendapatan, setPendapatan] = useState(null);\n    const [pendapatanBulan, setPendapatanBulan] = useState(null);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\n    const fetchData = async () => {\n        await API.post('keuangan/trendPendapatan', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultbulan = data.map(obj => months[obj.bulan - 1])\n                const resultTotal = data.map(obj => obj.total)\n                setPendapatan(resultTotal)\n                setPendapatanBulan(resultbulan)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    const data = {\n        labels: pendapatanBulan,\n        datasets: [\n            {\n                data: pendapatan,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"#93C5FD\"\n            },\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Trend Pendapatan'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n    return <Line data={data} options={options} />\n}\n\nexport default TrendPendapatan","import React from \"react\";\nimport KondisiKeuangan from \"./kondisiKeuangan\";\nimport Pendapatan from \"./pendapatan\";\nimport PendapatanCaraBayar from \"./pendapatanCaraBayar\";\nimport PendapatanPerCaraBayar from \"./pendapatanPerCaraBayar\";\nimport PendapatanPerJenis from \"./pendapatanPerJenis\";\nimport PendapatanPerPenunjang from \"./pendapatanPerPenunjang\";\nimport PendapatanPerRanap from \"./pendapatanPerRanap\";\nimport PendapatanPerUnit from \"./pendapatanPerUnit\";\nimport StatusKlaim from \"./statusKlaim\";\nimport TrendPendapatan from \"./trendPendapatan\";\n\nconst Keuangan = () => {\n\n    return (\n        <div className=\"h-screen w-full pt-20 px-2 pb-2 flex flex-row flex-wrap justify-between\">\n            <div className=\"w-2/12 h-full flex flex-col\">\n                <div className=\"h-2/3 w-full\">\n                    <Pendapatan />\n                </div>\n                <div className=\"h-1/3 w-full\">\n                    <div className=\"w-full h-full p-1\">\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                            <PendapatanCaraBayar />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"w-10/12 h-full flex flex-row\">\n                <div className=\"w-1/3 h-full flex flex-col h-full\">\n                    <div className=\"w-full h-1/6 flex flex-col\">\n                        <div className=\"w-full h-full p-1\">\n                            <KondisiKeuangan />\n                        </div>\n                    </div>\n                    <div className=\"w-full h-5/6 flex flex-col\">\n                        <div className=\"w-full h-1/2\">\n                            <div className=\"w-full h-full p-1\">\n                                <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                    <TrendPendapatan />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-full h-1/2\">\n                            <div className=\"w-full h-full p-1\">\n                                <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                    <StatusKlaim />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"w-1/3 flex flex-col h-full\">\n                    <div className=\"h-2/3\">\n                        <div className=\"w-full h-full p-1\">\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                <PendapatanPerUnit />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"h-1/3\">\n                        <div className=\"w-full h-full p-1\">\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                <PendapatanPerCaraBayar />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"w-1/3 flex flex-col h-full\">\n                    <div className=\"h-1/3\">\n                        <div className=\"w-full h-full p-1\">\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                <PendapatanPerPenunjang />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"h-1/3\">\n                        <div className=\"w-full h-full p-1\">\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                <PendapatanPerRanap />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"h-1/3\">\n                        <div className=\"w-full h-full p-1\">\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                <PendapatanPerJenis />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Keuangan","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst SepuluhBesarPenyakitRJ = () => {\n\n\n    const [sepuluhBesarPenyakitRJ, setsepuluhBesarPenyakitRJ] = useState(null);\n    const [sepuluhBesarPenyakitRJTotal, setsepuluhBesarPenyakitRJTotal] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('pelayanan/sepuluhBesarRajal', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resulticd = data.map(x => x.icd_code)\n                const resultTotal = data.map(x => x.jml)\n                setsepuluhBesarPenyakitRJ(resulticd)\n                setsepuluhBesarPenyakitRJTotal(resultTotal)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#F59E0B\");\n            gradient.addColorStop(1, \"#FCD34D\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: sepuluhBesarPenyakitRJ,\n        datasets: [\n            {\n                data: sepuluhBesarPenyakitRJTotal,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        //indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: '10 Besar Penyakit RJ'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default SepuluhBesarPenyakitRJ","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst SepuluhBesarPenyakitRI = () => {\n\n\n    const [sepuluhBesarPenyakitRI, setsepuluhBesarPenyakitRI] = useState(null);\n    const [sepuluhBesarPenyakitRITotal, setsepuluhBesarPenyakitRITotal] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('pelayanan/sepuluhBesarRanap', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resulticd = data.map(x => x.icd_code)\n                const resultTotal = data.map(x => x.jml)\n                setsepuluhBesarPenyakitRI(resulticd)\n                setsepuluhBesarPenyakitRITotal(resultTotal)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#6EE7B7\");\n            gradient.addColorStop(1, \"#047857\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: sepuluhBesarPenyakitRI,\n        datasets: [\n            {\n                data: sepuluhBesarPenyakitRITotal,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        //indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: '10 Besar Penyakit RI'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default SepuluhBesarPenyakitRI","import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst TrendKunjungan = () => {\n\n    const [kunjunganRJ, setKunjuganRJ] = useState(null);\n    const [kunjunganRI, setKunjuganRI] = useState(null);\n    const [kunjunganbulan, setKunjuganbulan] = useState(null);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\n    const fetchData = async () => {\n        await API.post('pelayanan/trendMasukRumahSakit', FilterDates)\n            .then(res => {\n                const dataRJ = res.data.kunjunganRJ\n                const dataRI = res.data.kunjunganRI\n                const resultbulan = dataRJ.map(obj => months[obj.bulan - 1])\n                const resultTotalRJ = dataRJ.map(obj => obj.jml)\n                const resultTotalRI = dataRI.map(obj => obj.jml)\n                setKunjuganRJ(resultTotalRJ)\n                setKunjuganRI(resultTotalRI)\n                setKunjuganbulan(resultbulan)\n            })\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    const data = {\n        labels: kunjunganbulan,\n        datasets: [\n            {\n                label: \"Rawat Jalan\",\n                data: kunjunganRJ,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"#93C5FD\"\n            },\n            {\n                label: \"Rawat Inap\",\n                data: kunjunganRI,\n                fill: false,\n                borderColor: \"#3B82F6\"\n            }\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Trend Kunjungan'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n    return <Line data={data} options={options} />\n}\n\nexport default TrendKunjungan","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst KunjunganRJ = () => {\n\n\n    const [kunjunganRJ, setkunjunganRJ] = useState(null);\n    const [kunjunganRJTotal, setskunjunganRJTotal] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await API.post('pelayanan/kunjunganRJ', FilterDates)\n                .then(res => {\n                    const data = res.data.result\n                    const resultLabel = data.map(x => x.label)\n                    const resultTotal = data.map(x => x.jml)\n                    setkunjunganRJ(resultLabel)\n                    setskunjunganRJTotal(resultTotal)\n                })\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#93C5FD\");\n            gradient.addColorStop(1, \"#1D4ED8\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: kunjunganRJ,\n        datasets: [\n            {\n                data: kunjunganRJTotal,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Kunjungan Rawat Jalan'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    font: {\n                        size: 4,\n                    },\n                    color: \"white\",\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    font: {\n                        size: 4,\n                    },\n                    color: \"white\",\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default KunjunganRJ","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst KunjunganRI = () => {\n\n\n    const [kunjunganRI, setkunjunganRI] = useState(null);\n    const [kunjunganRITotal, setskunjunganRITotal] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await API.post('pelayanan/kunjunganRI', FilterDates)\n                .then(res => {\n                    const data = res.data.result\n                    const resultLabel = data.map(x => x.label)\n                    const resultTotal = data.map(x => x.jml)\n                    setkunjunganRI(resultLabel)\n                    setskunjunganRITotal(resultTotal)\n                })\n\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#FCA5A5\");\n            gradient.addColorStop(1, \"#B91C1C\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: kunjunganRI,\n        datasets: [\n            {\n                data: kunjunganRITotal,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Kunjungan Rawat Inap'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    font: {\n                        size: 4,\n                    },\n                    color: \"white\",\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    font: {\n                        size: 4,\n                    },\n                    color: \"white\",\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default KunjunganRI","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst KunjunganCaraBayar = () => {\n\n\n    const [kunjunganCaraBayar, setkunjunganCaraBayar] = useState(null);\n    const [kunjunganCaraBayarTotal, setkunjunganCaraBayarTotal] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('pelayanan/kunjunganCaraBayar', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultLabel = data.map(x => x.label)\n                const resultTotal = data.map(x => x.total)\n                setkunjunganCaraBayar(resultLabel)\n                setkunjunganCaraBayarTotal(resultTotal)\n            })\n    }\n\n    useEffect(() => {\n\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#F59E0B\");\n            gradient.addColorStop(1, \"#FCD34D\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: kunjunganCaraBayar,\n        datasets: [\n            {\n                data: kunjunganCaraBayarTotal,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Kunjungan Cara Bayar'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    font: {\n                        size: 8,\n                    },\n                    color: \"white\",\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    font: {\n                        size: 8,\n                    },\n                    color: \"white\",\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default KunjunganCaraBayar","import React, { useEffect, useState } from \"react\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst Kunjungan = () => {\n\n\n    const [kunjungan, setkunjungan] = useState(null);\n    const [kunjunganAvg, setkunjunganAvg] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            await API.post('pelayanan/kunjungan', FilterDates)\n                .then(res => {\n                    const data = res.data.kunjungan\n                    const dataAvg = res.data.kunjunganAVG\n                    setkunjungan(data)\n                    setkunjunganAvg(dataAvg)\n                })\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        fetchData()\n        return () => clearInterval(dataInterval)\n    })\n\n    return (\n        <div className=\"h-full w-full flex flex-col justify-center\">\n            <div className=\"text-center font-bold text-white mb-1\">Kunjungan</div>\n            <div className=\"flex flex-row\">\n                <div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\n                    {kunjungan}\n                    <div className=\"text-xs font-bold\"> total</div>\n                </div>\n                <div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\n                    {kunjunganAvg}\n                    <div className=\"text-xs font-bold\"> rata-rata</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Kunjungan","import React, { useEffect, useState } from \"react\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst TempatTidur = () => {\n\n\n    const [TempatTidurNonCovid, setTempatTidurNonCovid] = useState(null);\n    const [TempatTidurCovid, setTempatTidurCovid] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            await API.post('pelayanan/ketersediaanBedNonCovid', FilterDates)\n                .then(res => {\n                    const data = res.data.semuaBedTersedia\n                    setTempatTidurNonCovid(data)\n                })\n            await API.post('pelayanan/ketersediaanBedCovid', FilterDates)\n                .then(res => {\n                    const data = res.data.semuaBedTersedia\n                    setTempatTidurCovid(data)\n                })\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        fetchData()\n        return () => clearInterval(dataInterval)\n    })\n\n    return (\n        <div className=\"h-full w-full flex flex-row mt-1\">\n            <div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\n                {TempatTidurNonCovid}\n                <div className=\"text-xs font-bold\">umum</div>\n            </div><div className=\"w-1/2 flex-col text-2xl text-center font-bold text-white\">\n                {TempatTidurCovid}\n                <div className=\"text-xs font-bold\">covid</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TempatTidur\n","import React, { useEffect, useState } from \"react\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst CovidState = () => {\n    const [covidState, setCovidState] = useState(0);\n\n    useEffect(() => {\n        async function fetchData() {\n            await API.post('pelayanan/stateCovid', FilterDates)\n                .then(res => {\n                    const data = res.data.data\n                    if (data) {\n                        setCovidState(data)\n                    }\n                })\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    return (\n        <div className=\"h-full w-full flex flex-col mt-1\">\n            <div className=\"text-center text-xs text-white\">Infectious Disease</div>\n            <div className=\"text-center font-bold text-sm text-white\">Covid-19</div>\n            <div className=\"text-center font-bold text-3xl text-white\">{covidState} </div>\n        </div>\n    )\n}\n\nexport default CovidState\n","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst KunjunganKecamatan = () => {\n\n\n    const [kunjunganKecamatan, setkunjunganKecamatan] = useState(null);\n    const [kunjunganKecamatanTotal, setkunjunganKecamatanTotal] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('pelayanan/kunjunganKecamatan', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const resultLabel = data.map(x => x.label)\n                const resultTotal = data.map(x => x.jml)\n                setkunjunganKecamatan(resultLabel)\n                setkunjunganKecamatanTotal(resultTotal)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#F59E0B\");\n            gradient.addColorStop(1, \"#FCD34D\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: kunjunganKecamatan,\n        datasets: [\n            {\n                data: kunjunganKecamatanTotal,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Kunjungan Berdasarkan Kecamatan'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    font: {\n                        size: 8,\n                    },\n                    color: \"white\",\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    font: {\n                        size: 8,\n                    },\n                    color: \"white\",\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default KunjunganKecamatan","import React, { useEffect, useState } from \"react\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst KondisiPelayanan = () => {\n\n\n    const [kondisi, setKondisi] = useState('indikator');\n    const [bg, setBG] = useState('false');\n\n    useEffect(() => {\n        async function fetchData() {\n            await API.post('pelayanan/barberjohnson', FilterDates)\n                .then(res => {\n                    const dataKondisi = res.data.result.indikator\n                    if (dataKondisi === \"Pelayanan kurang aman\") {\n                        setKondisi(dataKondisi)\n                        setBG(true)\n                    } else if (dataKondisi === \"Pelayanan keadaan aman\") {\n                        setKondisi(dataKondisi)\n                    }\n                })\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        fetchData()\n        return () => clearInterval(dataInterval)\n    })\n\n    return (\n        <div className={\n            bg ?\n                `w-full h-full p-1 flex flex-row rounded bg-yellow-500 flex text-white text-center text-2xl font-bold items-center justify-center`\n                : `w-full h-full p-1 flex flex-row rounded bg-green-500 flex text-white text-center text-2xl font-bold items-center justify-center`}>\n            {kondisi}\n        </div>\n    )\n}\n\nexport default KondisiPelayanan","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\n\nconst KunjunganDanPengunjung = () => {\n\n    const [dKBL1Data, setdKBL1Data] = useState(null);\n    const [dKBL2Data, setdKBL2Data] = useState(null);\n    const [dKJK1Data, setdKJK1Data] = useState(null);\n    const [dKJK2Data, setdKJK2Data] = useState(null);\n    const [dPBL1Data, setdPBL1Data] = useState(null);\n    const [dPBL2Data, setdPBL2Data] = useState(null);\n\n    const fetchData = async () => {\n        await API.post('pelayanan/kunjunganDanPengunjung', FilterDates)\n            .then(res => {\n                const data = res.data\n                setdKBL1Data(data.kunjunganBL[0].jumlah);\n                setdKBL2Data(data.kunjunganBL[1].jumlah);\n                setdKJK1Data(data.kunjunganLP[0].jumlah);\n                setdKJK2Data(data.kunjunganLP[1].jumlah);\n                setdPBL1Data(data.pengunjungBL[0].jumlah);\n                setdPBL2Data(data.pengunjungBL[1].jumlah);\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#F59E0B\");\n            gradient.addColorStop(1, \"#FCD34D\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: [\"K-BL\"],\n        datasets: [\n            {\n                label: 'Lama',\n                data: [dKBL1Data],\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n            {\n                label: 'Baru',\n                data: [dKBL2Data],\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n    const data2 = {\n        labels: [\"K-JK\"],\n        datasets: [\n            {\n                label: 'Laki-Laki',\n                data: [dKJK1Data],\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n            {\n                label: 'Perempuan',\n                data: [dKJK2Data],\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n    const data3 = {\n        labels: [\"P-BL\"],\n        datasets: [\n            {\n                label: 'Lama',\n                data: [dPBL1Data],\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n            {\n                label: 'Baru',\n                data: [dPBL2Data],\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        //indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: false\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                stacked: true,\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    display: false,\n                    color: \"white\"\n                },\n                stacked: true,\n            },\n        }\n    };\n\n    return <div className=\"flex\">\n        <div className=\"w-1/3 h-full flex flex-col items-center\">\n            <Bar data={data} options={options} />\n        </div>\n        <div className=\"w-1/3 h-full flex flex-col items-center\">\n            <Bar data={data2} options={options} />\n        </div>\n        <div className=\"w-1/3 h-full flex flex-col items-center\">\n            <Bar data={data3} options={options} />\n        </div>\n    </div>\n}\n\nexport default KunjunganDanPengunjung","import React, { useEffect, useState } from \"react\";\nimport FilterDates from \"../../../utils/date\";\nimport API from \"../../../utils/api\";\n\nconst BarberJohnson = () => {\n\n\n    const [gdr, setGDR] = useState(0);\n    const [ndr, setNDR] = useState(0);\n    const [bor, setBOR] = useState(0);\n\n    useEffect(() => {\n        async function fetchData() {\n            await API.post('pelayanan/barberjohnson', FilterDates)\n                .then(res => {\n                    const dataGDR = res.data.result.gdr\n                    const dataNDR = res.data.result.ndr\n                    const dataBOR = res.data.result.bor\n                    setGDR(dataGDR)\n                    setNDR(dataNDR)\n                    setBOR(dataBOR)\n                })\n        }\n        const dataInterval = setInterval(fetchData, 15000);\n        fetchData()\n        return () => clearInterval(dataInterval)\n    })\n\n    return (\n        <div className=\"w-full h-full p-1 bg-blue-500 flex flex-row rounded\">\n            <div className=\"w-1/3 h-full flex flex-col items-center\">\n                <div className=\"text-sm text-center text-white \">BOR</div>\n                <div className=\"text-lg text-center font-bold text-white\">{bor}</div>\n                <div className=\"text-xs text-center text-white \">%</div>\n                <div className=\"text-xs text-center text-white \">(60-85)</div>\n            </div>\n            <div className=\"w-1/3 h-full flex flex-col items-center\">\n                <div className=\"text-sm text-center text-white \">NDR</div>\n                <div className=\"text-lg text-center font-bold text-white\">{ndr}</div>\n                <div className=\"text-xs text-center text-white \">‰</div>\n                <div className=\"text-xs text-center text-white \">{`(<45)`}</div>\n            </div>\n            <div className=\"w-1/3 h-full flex flex-col items-center\">\n                <div className=\"text-sm text-center text-white \">GDR</div>\n                <div className=\"text-lg text-center font-bold text-white\">{gdr}</div>\n                <div className=\"text-xs text-center text-white \">‰</div>\n                <div className=\"text-xs text-center text-white \">{`(<25)`}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default BarberJohnson","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst StockObat = () => {\n\n\n    const [stockObat, setStockObat] = useState(0);\n    const [namaObat, setNamaObat] = useState(0);\n\n    const fetchData = async () => {\n        await API.post('pelayanan/stockObat', FilterDates)\n            .then(res => {\n                const data = res.data.result\n                const hasilNamaObat = data.map(x => x.name)\n                const hasilStockObat = data.map(x => x.jumlah)\n                setStockObat(hasilStockObat)\n                setNamaObat(hasilNamaObat)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#F59E0B\");\n            gradient.addColorStop(1, \"#FCD34D\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: namaObat,\n        datasets: [\n            {\n                data: stockObat,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Stock Obat'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default StockObat","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport API from \"../../../utils/api\";\nimport FilterDates from \"../../../utils/date\";\n\nconst PenggunaanObatTertinggi = () => {\n\n\n    const [obatLabel, setObatLabel] = useState(0);\n    const [obatTotal, setObatTotal] = useState(0);\n\n    const fetchData = async () => {\n        await API.post('pelayanan/penggunaanObatTertinggi', FilterDates)\n            .then(res => {\n                const data = res.data.data\n                const namaObat = data.map(x => x.drug_name)\n                const stockObat = data.map(x => x.total)\n                setObatLabel(namaObat)\n                setObatTotal(stockObat)\n            })\n\n    }\n\n    useEffect(() => {\n        const dataInterval = setInterval(fetchData, 15000);\n        return () => clearInterval(dataInterval)\n    })\n\n    let width, height, gradient;\n    function getGradient(ctx, chartArea) {\n        const chartWidth = chartArea.right - chartArea.left;\n        const chartHeight = chartArea.bottom - chartArea.top;\n        if (gradient === null || width !== chartWidth || height !== chartHeight) {\n            // Create the gradient because this is either the first render\n            // or the size of the chart has changed\n            width = chartWidth;\n            height = chartHeight;\n            gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n            gradient.addColorStop(0, \"#93C5FD\");\n            gradient.addColorStop(1, \"#1D4ED8\");\n        }\n\n        return gradient;\n    }\n\n    const data = {\n        labels: obatLabel,\n        datasets: [\n            {\n                data: obatTotal,\n                fill: true,\n                cubicInterpolationMode: 'monotone',\n                backgroundColor: function (context) {\n                    const chart = context.chart;\n                    const { ctx, chartArea } = chart;\n\n                    if (!chartArea) {\n                        // This case happens on initial chart load\n                        return null;\n                    }\n                    return getGradient(ctx, chartArea);\n                },\n            },\n        ]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n                fontColor: \"white\"\n            },\n            title: {\n                display: true,\n                color: \"white\",\n                text: 'Penggunaan Obat Tertinggi'\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        scales: {\n            x: {\n                ticks: {\n                    color: \"white\"\n                },\n                gridLines: {\n                    display: false,\n                    color: \"white\"\n                },\n            },\n            y: {\n                ticks: {\n                    color: \"white\"\n                }\n            },\n        }\n    };\n\n    return <Bar data={data} options={options} />\n}\n\nexport default PenggunaanObatTertinggi","import React from \"react\";\nimport SepuluhBesarPenyakitRJ from \"./sepuluhBesarPenyakitRJ\";\nimport SepuluhBesarPenyakitRI from \"./sepuluhBesarPenyakitRI\";\nimport TrendKunjungan from \"./trendKunjungan\";\nimport KunjunganRJ from \"./kunjunganRJ\";\nimport KunjunganRI from \"./kunjunganRI\";\nimport KunjunganCaraBayar from \"./kunjunganCaraBayar\";\nimport Kunjungan from \"./kunjungan\";\nimport TempatTidur from \"./tempatTidur\";\nimport CovidState from \"./covidstate\";\nimport KunjunganKecamatan from \"./kunjunganKecamatan\";\nimport Kondisi from \"./kondisi\";\nimport KunjunganDanPengunjung from \"./kunjunganDanPengunjung\";\nimport BarberJohnson from \"./barberJohnson\";\nimport StockObat from \"./stockObat\";\nimport PenggunaanObatTertinggi from \"./penggunaanObat\";\n\nconst Pelayanan = () => {\n\n    return (\n        <section className=\"h-screen w-full pt-20 px-2 pb-2 flex flex-row flex-wrap justify-between\">\n            <div className=\"w-1/4 h-full\">\n                <div className=\"h-1/3 w-full flex flex-wrap\">\n                    <div className=\"w-1/2 h-1/2 p-1\">\n                        <div className=\"w-full h-full p-1 bg-yellow-500 flex flex-col items-center rounded\">\n                            <Kunjungan />\n                        </div>\n                    </div>\n                    <div className=\"w-1/2 h-1/2 p-1\">\n                        <div className=\"w-full h-full p-1 bg-red-700 flex flex-col items-center rounded\">\n                            <div className=\"text-center font-bold text-white\">TT Tersedia</div>\n                            <TempatTidur />\n                        </div>\n                    </div>\n                    <div className=\"w-1/2 h-1/2 p-1\">\n                        <BarberJohnson />\n                    </div>\n                    <div className=\"w-1/2 h-1/2 p-1\">\n                        <div className=\"w-full h-full p-1 bg-red-500 flex flex-col items-center rounded\">\n                            <CovidState />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"h-1/3 w-full\">\n                    <div className=\"w-full h-full p-1\">\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                            <div className=\"text-center font-bold text-white\">Kunjungan dan Pengunjung</div>\n                            <KunjunganDanPengunjung />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"h-1/3 w-full\">\n                    <div className=\"w-full h-full flex flex-row\">\n                        <div className=\"w-1/2 h-full p-1\">\n                            <div className=\"w-full h-full p-1 rounded bg-gray-700 border border-blue-500\">\n                                <PenggunaanObatTertinggi />\n                            </div>\n                        </div>\n                        <div className=\"w-1/2 h-full p-1\">\n                            <div className=\"w-full h-full p-1 rounded bg-gray-700 border border-blue-500\">\n                                <StockObat />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"w-1/4 h-full\">\n                <div className=\"h-1/3 w-full flex flex-wrap\">\n                    <div className=\"w-full h-full p-1\">\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                            <KunjunganRJ />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"h-1/3 w-full\">\n                    <div className=\"w-full h-full p-1\">\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                            <KunjunganRI />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"h-1/3 w-full\">\n                    <div className=\"w-full h-full p-1\">\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                            <KunjunganCaraBayar />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"w-1/4 h-full\">\n                <div className=\"h-1/2 w-full flex flex-wrap\">\n                    <div className=\"w-full h-full p-1\">\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                            <TrendKunjungan />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"h-1/2 w-full flex flex-wrap\">\n                    <div className=\"w-full h-full p-1\">\n                        <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                            <KunjunganKecamatan />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"w-1/4 h-full\">\n                <div className=\"h-1/6 w-full\">\n                    <div className=\"w-full h-full p-1\">\n                        <Kondisi />\n                    </div>\n                </div>\n                <div className=\"h-5/6 w-full\">\n                    <div className=\"h-1/2 w-full\">\n                        <div className=\"w-full h-full p-1\">\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                <SepuluhBesarPenyakitRJ />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"h-1/2 w-full\">\n                        <div className=\"w-full h-full p-1\">\n                            <div className=\"w-full h-full p-1 flex flex-col rounded bg-gray-700 border border-blue-500\">\n                                <SepuluhBesarPenyakitRI />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Pelayanan","import React, { useEffect, useState } from \"react\";\nimport Loading from \"../../utils/loading\";\nimport Navbar from \"../additional/navbar\";\nimport Keuangan from \"./keuangan\";\nimport Pelayanan from \"./pelayanan/index\";\n\nconst Dashboard = ({ between }) => {\n\n    const groupAccess = parseInt(localStorage.getItem('group'))\n\n    if (groupAccess === 1) {\n        return (\n\n            <div className=\"bg-gray-700\">\n                <Navbar between={between} title={\"BI\"} />\n                <Pelayanan />\n                <Keuangan />\n            </div>\n        )\n    } else if (groupAccess === 2) {\n        return (\n\n            <div className=\"bg-gray-700\">\n                <Navbar between={between} title={\"BI Pelayanan\"} />\n                <Pelayanan />\n            </div>\n        )\n    } else if (groupAccess === 3) {\n        return (\n            <div className=\"bg-gray-700\">\n                <Navbar between={between} title={\"BI Keuangan\"} />\n                <Keuangan />\n            </div>\n        )\n    }\n}\n\nexport default Dashboard","import { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport Login from \"./common/component/login\";\nimport Dashboard from \"./common/component/dashboard\";\nimport { firstDate } from \"./common/utils/date\";\n\n\nfunction App() {\n\n    const [isAuth, setIsAuth] = useState(false)\n    const [between, setBetween] = useState(\"justify-between\")\n\n    useEffect(() => {\n        const middleware = () => {\n            const date = new Date()\n            const auth = localStorage.getItem(\"authorization\")\n            window.sessionStorage.setItem(\"lastDate\", moment(date).format(`YYYY-MM-DD`));\n            window.sessionStorage.setItem(\"limit\", 10);\n            if (auth) {\n                setIsAuth(true)\n            }\n        }\n        const filter = () => {\n            if (firstDate) {\n                setBetween(\"justify-between\")\n            } else {\n\n            }\n        }\n        filter()\n        middleware()\n    })\n\n    return (\n        <>\n            {isAuth ? <Dashboard between={between} /> : <Login />}\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n    useSystemColorMode: true,\n}\n\nconst theme = extendTheme({ config })\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ColorModeScript } from \"@chakra-ui/react\";\nimport theme from \"./common/utils/theme\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <ColorModeScript initialColorMode={theme.config.useSystemColorMode} />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}